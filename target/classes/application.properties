spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/blogs
spring.datasource.username=root
spring.datasource.password=123456

#连接池的补充设置,应用到上面所有数据源中
# 初始化大小，最小，最大
spring.datasource.initialSize=1
spring.datasource.minIdle=10
spring.datasource.maxActive=20
# 配置获取连接等待超时的时间
spring.datasource.maxWait=60000
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.datasource.filters=stat,wall,log4j

# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.minEvictableIdleTimeMillis=300000
spring.datasource.validationQuery=SELECT 1 FROM DUAL
spring.datasource.testWhileIdle=true
spring.datasource.testOnBorrow=false
spring.datasource.testOnReturn=false
# 打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource.poolPreparedStatements=true
spring.datasource.maxPoolPreparedStatementPerConnectionSize=20

# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000

# 打开removeAbandoned功能
spring.datasource.removeAbandoned=true
#1800秒 30分钟
spring.datasource.removeAbandonedTimeout=1800
#关闭abanded连接时输出错误日志
spring.datasource.logAbandoned=true
# 合并多个DruidDataSource的监控数据
#配置监控统计拦截的filters
#spring.datasource.useGlobalDataSourceStat=true
#设置服务器端口号
server.port=8011

spring.velocity.toolbox-config-location=toolbox.xml
##日志
logging.level.org.apache.velocity=DEBUG
##指定编码，否则中文乱码
spring.velocity.properties.input.encoding=UTF-8
spring.velocity.properties.output.encoding=UTF-8


